"""function that adds 2 integers."""

======================

# Used "add_integer"
-------------------

This is a file text in format txt

How to Used:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# 2 strings
>>> bg.integer_validator("Hello", "True")
Traceback (most recent call last):
...
TypeError: Hello must be an integer

# empty
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

#integer
>>> bg.integer_validator(12, 21)
>>>

#float
>>> bg.integer_validator(1.2, 2.1)
Traceback (most recent call last):
...
TypeError: 1.2 must be an integer

#negative
>>> bg.integer_validator(-12, -21)
Traceback (most recent call last):
...
ValueError: -12 must be greater than 0

# List
>>> bg.integer_validator((12, 21), (21, 12))
Traceback (most recent call last):
...
TypeError: (12, 21) must be an integer

# more 2 arguments
>>> bg.integer_validator("Hello", 2, 12)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

# one arguments
>>> bg.integer_validator("Hello")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

# zero, zero
>>> bg.integer_validator(0, 0)
Traceback (most recent call last):
...
ValueError: 0 must be greater than 0

#bool
>>> bg.integer_validator("Hi", True)
Traceback (most recent call last):
...
TypeError: Hi must be an integer

>>> bg.integer_validator(2, {4:True, 3:False})
Traceback (most recent call last):
...
TypeError: 2 must be an integer